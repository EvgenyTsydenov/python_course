[tool.poetry]
name = "jupyter-grader"
version = "0.1.0"
description = ""
authors = ["Evgeny Tsydenov <evgenytsydenov@gmail.com>"]
readme = "README.md"
packages = [{ include = "jupyter_grader", from = "src" }]

[tool.poetry.dependencies]
python = "^3.10"
nbgrader = "^0.8.1"
google-api-python-client = "^2.70.0"
google-auth-httplib2 = "^0.1.0"
google-auth-oauthlib = "^0.8.0"
python-dotenv = "^0.21.0"
email-validator = "^1.3.0"

[tool.poetry.group.dev.dependencies]
pre-commit = "^2.20.0"
black = { extras = ["jupyter"], version = "^22.12.0" }
mypy = "^0.991"
sourcery-cli = "^1.0.2"
pytest = "^7.2.0"
hypothesis = { extras = ["pytz"], version = "^6.61.0" }
types-pytz = "^2022.7.0.0"
types-requests = "^2.28.11.7"
sqlalchemy2-stubs = "^0.0.2a31"
nb-clean = "^2.4.0"
types-python-dateutil = "^2.8.19.5"
ruff = "^0.0.193"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 88
select = [
    "E", "F", "W", "C90", "I", "D", "UP", "N", "YTT", "ANN", "S", "BLE", "FBT",
    "B", "A", "C4", "T10", "ICN", "T20", "Q", "RET", "SIM", "TID", "ARG",
    "ERA", "PGH", "PLC", "PLE", "PLR", "PLW", "RUF"
]
ignore = [
    "FBT001", "FBT002", "D100", "D105", "ANN101", "ANN102", "ANN002", "ANN003",
    "ANN401", "D203", "D204", "D213", "D215", "D400", "D404", "D406", "D407",
    "D408", "D409", "D413", "RET504",
]
exclude = [
    ".bzr", ".direnv", ".eggs", ".git", ".hg", ".mypy_cache", ".nox",
    ".pants.d", ".ruff_cache", ".svn", ".tox", ".venv", "__pypackages__",
    "_build", "buck-out", "build", "dist", "node_modules", "venv",
]
target-version = "py310"
fix = true
ignore-init-module-imports = true

[tool.ruff.per-file-ignores]
"test_*.py" = ["S101"]

[tool.mypy]
python_version = "3.10"
strict = true
ignore_missing_imports = true
